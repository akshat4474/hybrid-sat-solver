import random
import os

def generate_random_cnf(num_vars: int, num_clauses: int, output_path: str, seed: int = None) -> dict:
    """
    Generate a random 3-CNF problem and save it in DIMACS format.
    Returns metadata about the CNF instance.
    """
    os.makedirs(os.path.dirname(output_path), exist_ok=True)

    if seed is not None:
        random.seed(seed)

    ratio = round(num_clauses / max(num_vars, 1), 2)

    with open(output_path, 'w') as f:
        f.write(f"c Random 3-CNF generated by Hybrid SAT Solver\n")
        f.write(f"c Variables: {num_vars}, Clauses: {num_clauses}, Ratio: {ratio}\n")
        if seed is not None:
            f.write(f"c Seed: {seed}\n")
        f.write(f"p cnf {num_vars} {num_clauses}\n")
        for _ in range(num_clauses):
            clause = random.sample(range(1, num_vars + 1), 3)
            clause = [lit if random.random() < 0.5 else -lit for lit in clause]
            f.write(" ".join(map(str, clause)) + " 0\n")

    print(f"CNF file saved to: {output_path}")
    return {
        "filename": output_path,
        "num_vars": num_vars,
        "num_clauses": num_clauses,
        "ratio": ratio,
        "seed": seed
    }
